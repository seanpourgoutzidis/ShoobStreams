{"ast":null,"code":"var _jsxFileName = \"/Users/seanpourgoutzidis/streams/client/src/components/streams/StreamEdit.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { fetchStream, editStream } from '../../actions';\nimport StreamForm from './StreamForm';\nimport _ from 'lodash';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass StreamEdit extends React.Component {\n  constructor() {\n    super(...arguments);\n\n    this.onSubmit = formValues => {};\n  }\n\n  componentDidMount() {\n    this.props.fetchStream(this.props.match.params.id);\n  }\n\n  render() {\n    if (!this.props.stream) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 21\n      }, this);\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Edit a Stream\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(StreamForm, {\n        initialValues: _.pick(this.props.stream, title, 'description'),\n        onSubmit: this.onSubmit\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nconst mapStateToProps = (state, ownProps) => {\n  return {\n    stream: state.streams[ownProps.match.params.id]\n  };\n};\n\nexport default connect(mapStateToProps, {\n  fetchStream,\n  editStream\n})(StreamEdit);","map":{"version":3,"names":["React","connect","fetchStream","editStream","StreamForm","_","StreamEdit","Component","onSubmit","formValues","componentDidMount","props","match","params","id","render","stream","pick","title","mapStateToProps","state","ownProps","streams"],"sources":["/Users/seanpourgoutzidis/streams/client/src/components/streams/StreamEdit.js"],"sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux';\nimport { fetchStream, editStream } from '../../actions';\nimport StreamForm from './StreamForm';\nimport _ from 'lodash';\n\nclass StreamEdit extends React.Component {\n    componentDidMount() {\n        this.props.fetchStream(this.props.match.params.id);\n    }\n\n    onSubmit = (formValues) => {\n\n    };\n\n    render () {\n        if (!this.props.stream) {\n            return (<div>Loading...</div>);\n        }\n\n        return (\n            <div>\n                <h3>Edit a Stream</h3>\n                <StreamForm initialValues = {_.pick(this.props.stream, title, 'description')} onSubmit = {this.onSubmit} />\n            </div>\n        );\n    }    \n}\n\nconst mapStateToProps = (state, ownProps) => {\n    return { stream: state.streams[ownProps.match.params.id] };\n};\n\nexport default connect(mapStateToProps, { fetchStream, editStream })(StreamEdit);"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,WAAT,EAAsBC,UAAtB,QAAwC,eAAxC;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,OAAOC,CAAP,MAAc,QAAd;;;AAEA,MAAMC,UAAN,SAAyBN,KAAK,CAACO,SAA/B,CAAyC;EAAA;IAAA;;IAAA,KAKrCC,QALqC,GAKzBC,UAAD,IAAgB,CAE1B,CAPoC;EAAA;;EACrCC,iBAAiB,GAAG;IAChB,KAAKC,KAAL,CAAWT,WAAX,CAAuB,KAAKS,KAAL,CAAWC,KAAX,CAAiBC,MAAjB,CAAwBC,EAA/C;EACH;;EAMDC,MAAM,GAAI;IACN,IAAI,CAAC,KAAKJ,KAAL,CAAWK,MAAhB,EAAwB;MACpB,oBAAQ;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAAR;IACH;;IAED,oBACI;MAAA,wBACI;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QADJ,eAEI,QAAC,UAAD;QAAY,aAAa,EAAIX,CAAC,CAACY,IAAF,CAAO,KAAKN,KAAL,CAAWK,MAAlB,EAA0BE,KAA1B,EAAiC,aAAjC,CAA7B;QAA8E,QAAQ,EAAI,KAAKV;MAA/F;QAAA;QAAA;QAAA;MAAA,QAFJ;IAAA;MAAA;MAAA;MAAA;IAAA,QADJ;EAMH;;AApBoC;;AAuBzC,MAAMW,eAAe,GAAG,CAACC,KAAD,EAAQC,QAAR,KAAqB;EACzC,OAAO;IAAEL,MAAM,EAAEI,KAAK,CAACE,OAAN,CAAcD,QAAQ,CAACT,KAAT,CAAeC,MAAf,CAAsBC,EAApC;EAAV,CAAP;AACH,CAFD;;AAIA,eAAeb,OAAO,CAACkB,eAAD,EAAkB;EAAEjB,WAAF;EAAeC;AAAf,CAAlB,CAAP,CAAsDG,UAAtD,CAAf"},"metadata":{},"sourceType":"module"}