{"ast":null,"code":"var _jsxFileName = \"/Users/seanpourgoutzidis/streams/client/src/components/streams/StreamShow.js\";\nimport React from 'react';\nimport { connect, Connect } from 'react-redux';\nimport { fetchStream } from '../../actions';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass StreamShow extends React.Component {\n  componentDidMount() {\n    this.props.fetchStream(this.props.match.params.id);\n  }\n\n  render() {\n    if (!this.props.stream) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"LOADING...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 19\n      }, this);\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 16\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 12\n    }, this);\n  }\n\n}\n\nconst mapStateToProps = (state, ownProps) => {\n  return {\n    stream: state.streams[ownProps.match.params.id]\n  };\n};\n\nexport default connect(mapStateToProps, {\n  fetchStream\n})(StreamShow);","map":{"version":3,"names":["React","connect","Connect","fetchStream","StreamShow","Component","componentDidMount","props","match","params","id","render","stream","mapStateToProps","state","ownProps","streams"],"sources":["/Users/seanpourgoutzidis/streams/client/src/components/streams/StreamShow.js"],"sourcesContent":["import React from 'react';\nimport { connect, Connect } from 'react-redux';\nimport { fetchStream } from '../../actions';\n\nclass StreamShow extends React.Component{\n   componentDidMount() {\n       this.props.fetchStream(this.props.match.params.id);\n   }\n\n    render() {\n       if (!this.props.stream) {\n           return <div>LOADING...</div>;\n       }\n\n        return (\n           <div>\n               <h1></h1>\n           </div>\n       );\n   }\n}\n\nconst mapStateToProps = (state, ownProps) => {\n    return { stream: state.streams[ownProps.match.params.id] };\n};\n\nexport default connect(mapStateToProps, { fetchStream })(StreamShow);"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,EAAkBC,OAAlB,QAAiC,aAAjC;AACA,SAASC,WAAT,QAA4B,eAA5B;;;AAEA,MAAMC,UAAN,SAAyBJ,KAAK,CAACK,SAA/B,CAAwC;EACrCC,iBAAiB,GAAG;IAChB,KAAKC,KAAL,CAAWJ,WAAX,CAAuB,KAAKI,KAAL,CAAWC,KAAX,CAAiBC,MAAjB,CAAwBC,EAA/C;EACH;;EAEAC,MAAM,GAAG;IACN,IAAI,CAAC,KAAKJ,KAAL,CAAWK,MAAhB,EAAwB;MACpB,oBAAO;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAAP;IACH;;IAEA,oBACG;MAAA,uBACI;QAAA;QAAA;QAAA;MAAA;IADJ;MAAA;MAAA;MAAA;IAAA,QADH;EAKJ;;AAfoC;;AAkBxC,MAAMC,eAAe,GAAG,CAACC,KAAD,EAAQC,QAAR,KAAqB;EACzC,OAAO;IAAEH,MAAM,EAAEE,KAAK,CAACE,OAAN,CAAcD,QAAQ,CAACP,KAAT,CAAeC,MAAf,CAAsBC,EAApC;EAAV,CAAP;AACH,CAFD;;AAIA,eAAeT,OAAO,CAACY,eAAD,EAAkB;EAAEV;AAAF,CAAlB,CAAP,CAA0CC,UAA1C,CAAf"},"metadata":{},"sourceType":"module"}